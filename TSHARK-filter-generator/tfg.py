#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Marcus Botacin
# Generate tshark filtering rules

import sys # receive args

# display head when printing
head="[TFG]"

# usage information
def usage(bin_name):

	print(	"%s python %s <pcap_file> (required) --options" % (head,bin_name))
	print(	"%s Options:"
		" --all <ip> (exclusive)"
		" --ip-src"
		" --ip-dst"
		" --tcp-src"
		" --tcp-dst"
		" --udp-src"
		" --udp-dst"
		 % head)
	print("%s Type -h for help" % head)

#base command
def basename(pcap):
	return "tshark -r "+pcap

# emit all
def emit_all(pcap,ip):
	print(basename(pcap)+"%s -Y \"ip.addr==%s\"" % (pcap,ip))

#add ip src
def add_ipsrc(cmd):
	return cmd+" -e ip.src"

#add ip dst
def add_ipdst(cmd):
	return cmd+" -e ip.dst"

#add tcp src
def add_tcpsrc(cmd):
	return cmd+" -e tcp.srcport"

#add tcp dst
def add_tcpdst(cmd):
	return cmd+" -e tcp.dstport"

# udp src
def add_udpsrc(cmd):
	return cmd+" -e udp.srcport"

# udp dst
def add_udpdst(cmd):
	return cmd+" -e udp.dstport"

# Main
def main(pcap_file,all,ipsrc,ipdst,tcpsrc,tcpdst,udpsrc,udpdst):
	# case all
	if all:
		emit_all(pcap_file,all)
		# exclusive, then exit
		sys.exit(0)
	
	# other cases
	_base = basename(pcap_file)

	if ipsrc:
		_base=add_ipsrc(_base)

	if ipdst:
		_base=add_ipdst(_base)

	if tcpsrc:
		_base=add_tcpsrc(_base)

	if tcpdst:
		_base=add_tcpdst(_base)

	if udpsrc:
		_base=add_udpsrc(_base)

	if udpdst:
		_base=add_udpdst(_base)

	print(_base+" -T fields")

# parser
def parse(args):
	
	# startup values, empty
	_all=None
	_ipsrc=False
	_ipdst=False
	_tcpsrc=False
	_tcpdst=False
	_udpsrc=False
	_udpdst=False
	_usage=False
	
	bin_name=args[0] # script name
	if(len(args) > 2):

		pcap_file = args[1] # pcap file
		
		# parsin arguments
		for i,arg in enumerate(args[2:]):
		# iterate over all args
			#help
			if "-h" in arg:
				# usage will be displayed
				_usage=True
			# all
			if "--all" in arg:
				#3 offset, since list starts at 3
				_all=args[i+3]
			# source ip
			if "--ip-src" in arg:
				_ipsrc=True
			# dest ip
			if "--ip-dst" in arg:
				_ipdst=True
			# src tcp
			if "--tcp-src" in arg:
				_tcpsrc=True
			# dst tcp
			if "--tcp-dst" in arg:
				_tcpdst=True
			# udp src
			if "--udp-src" in arg:
				_udpsrc=True
			# udp dst
			if "--udp-dst" in arg:
				_udpdst=True
	else:
		_usage=True

	# args parsed
	
	# display usage message ?
	if _usage:
		usage(bin_name)
		# if usage, then finish
		sys.exit(0)

	# parsed params
	return pcap_file,_all,_ipsrc,_ipdst,_tcpsrc,_tcpdst,_udpsrc,_udpdst

# Entry Point
if __name__ == "__main__":
	# parse args
	# errors will stop execution
	pcap_file,all,ipsrc,ipdst,tcpsrc,tcpdst,udpsrc,udpdst = parse(sys.argv)
	# if ok, start
	main(pcap_file,all,ipsrc,ipdst,tcpsrc,tcpdst,udpsrc,udpdst) 
else:
	# module import case
	print("No module import support yet")
